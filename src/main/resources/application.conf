akka {
  loglevel = DEBUG

  actor {
    provider = cluster

    serialization-bindings {
      "br.com.diegosilva.http.sched.CborSerializable" = jackson-cbor
    }
  }

  remote.artery {
    canonical.port = 2551
    canonical.port = ${?CANONICAL_PORT}
    canonical.port = ${?canonical.port}
    canonical.hostname = 127.0.0.1
    canonical.hostname = ${?CANONICAL_HOST_NAME}
    canonical.hostname = ${?canonical.hostname}
  }

  cluster {
    seed-nodes = [
      "akka://http-sched-system@127.0.0.1:2551"
    ]
    sharding {
          number-of-shards = 100
    }
  }
}

akka.cluster.downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
akka.cluster.split-brain-resolver {
  active-strategy = keep-majority
  stable-after = 20s
  down-all-when-unstable = on
}

akka.actor.typed.extensions = ["br.com.diegosilva.http.sched.database.DatabasePool"]

server.http.port = 8081
server.http.port = ${?HTTP_PORT}
server.http.port = ${?http.port}
server.askTimeout = 10 s

database = {
  connectionPool = "HikariCP"
  dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
  properties = {
    serverName = "192.168.31.142"
    portNumber = "5432"
    databaseName = "postgres"
    user = "postgres"
    password = "postgres"
  }
  numThreads = 10
}

